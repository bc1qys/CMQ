async function fetchAvailableMatches() {
    const messageEl = document.getElementById('available-matches-message');
    const tbody = document.getElementById('available-matches-table').querySelector('tbody');
    tbody.innerHTML = ''; // Vider la liste précédente
    messageEl.textContent = 'Chargement des matchs disponibles...';
    messageEl.className = 'info';

    try {
        const response = await fetch('/api/matches');
        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || `Erreur HTTP: ${response.status}`);
        }
        const data = await response.json();

        if (data.matches && data.matches.length > 0) {
            data.matches.forEach(match => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${match.id}</td>
                    <td>${match.challenge_name}</td>
                    <td>${match.level}</td>
                    <td>${match.points}</td>
                    <td>${match.status}</td>
                `;
                tbody.appendChild(row);
            });
            messageEl.textContent = ''; // Effacer le message de chargement
        } else {
            messageEl.textContent = 'Aucun match n\'est actuellement disponible.';
        }
    } catch (error) {
        console.error('Erreur fetchAvailableMatches:', error);
        messageEl.textContent = error.message || 'Erreur réseau lors du chargement des matchs.';
        messageEl.className = 'error';
    }
}